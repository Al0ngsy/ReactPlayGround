{"version":3,"sources":["Main/Main.js","Person/Person.js","Person/App.js","Test/App.js","serviceWorker.js","index.js","App.js"],"names":["NotFound","style","textAlign","Person","name","age","saving","this","_name","_age","_saving","givePaycheck","hasEnoughSavings","itemCost","value","match","App","state","fullName","item","visited","persons","handleChange","bind","savingPerson","checkSaving","givePayCheck","savingPersonsToLocal","pushPersonsOnServer","clearLocalStorage","personsJSON","JSON","parse","localStorage","get","index","person","p","hasEnoughSaving","setState","length","parseInt","set","event","target","toString","alert","stringify","clear","autoComplete","margin","TextField","id","label","onChange","variant","Button","color","onClick","disabled","FormControl","Input","placeholder","startAdornment","InputAdornment","position","Paper","minWidth","maxWidth","overflowX","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","Box","bgcolor","bottom","right","borderRadius","zIndex","Component","Boolean","window","location","hostname","ReactDOM","render","to","textDecoration","path","AppPerson","AppTest","Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f01d1b7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NotFound = () => <h1 style={{textAlign: \"center\"}}>Welcome To My React Playground</h1>\r\n\r\nexport default NotFound ","export class Person {\r\n    constructor(name, age, saving){\r\n        // public\r\n        this._name = name\r\n        this._age = age\r\n        // private\r\n        let _saving = saving != null ? saving : 0.0\r\n        // methods on private, never directly return _saving\r\n        this.givePaycheck = () => {\r\n            _saving += 100.0\r\n        }\r\n        this.hasEnoughSavings = (itemCost) => {\r\n            return _saving >= itemCost\r\n        }\r\n    }\r\n\r\n    get name() {\r\n        return this._name\r\n    }\r\n\r\n    set name(name) {\r\n        let letters = /^[a-zA-Z\\s]*$/\r\n        if (name.value.match(letters)) {\r\n            this._name = name   \r\n        }\r\n    }\r\n\r\n    get age() {\r\n        return this._age\r\n    }\r\n\r\n    set age(age) {\r\n        let numbers = /^[0-9]+$/\r\n        if (age.value.match(numbers)) {\r\n            this._age = age\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Person } from \"./Person\"\n\n// Table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n// Button\nimport Button from '@material-ui/core/Button';\n// Input\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n// Box\nimport Box from '@material-ui/core/Box';\n// Storage\nimport localStorage from 'local-storage';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tfullName: \"\",\n\t\t\tage: null,\n\t\t\tsaving: null,\n\t\t\titem: null,\n\t\t\tvisited: 0,\n\t\t\tpersons: []\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.savingPerson = this.savingPerson.bind(this)\n\t\tthis.checkSaving = this.checkSaving.bind(this)\n\t\tthis.givePayCheck = this.givePayCheck.bind(this)\n\t\tthis.savingPersonsToLocal = this.savingPersonsToLocal.bind(this)\n\t\tthis.pushPersonsOnServer = this.pushPersonsOnServer.bind(this)\n\t\tthis.clearLocalStorage = this.clearLocalStorage.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\t// the methods of the object can not be saved\n\t\t// the private variable \"saving\" can also not be saved  \n\t\tlet personsJSON = JSON.parse(localStorage.get(\"persons\"))\n\n\t\tif (personsJSON !== null) {\n\t\t\t// init them again with default saving of 0.0\n\t\t\t// since saving of the person can not be access from outside \n\t\t\t// and there is currently no object method that return it\n\t\t\tfor (let index = 0; index < personsJSON.length; index++) {\n\t\t\t\tconst person = personsJSON[index];\n\t\t\t\tlet p = new Person(person._name, person._age)\n\t\t\t\tp.hasEnoughSaving = null\n\n\t\t\t\tthis.setState(state => {\n\t\t\t\t\t// save that person\n\t\t\t\t\tconst persons = [...state.persons, p] //concat would also work\n\n\t\t\t\t\t// debug\n\t\t\t\t\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\tconsole.table(persons)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpersons\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tlet visited = localStorage.get(\"visitCount\")\n\n\t\tif (visited !== null) {\n\t\t\tvisited = parseInt(visited) + 1\n\t\t\tthis.setState(state => {\n\t\t\t\treturn {\n\t\t\t\t\tvisited\n\t\t\t\t}\n\t\t\t})\n\t\t\tlocalStorage.set(\"visitCount\", visited)\n\t\t} else {\n\t\t\tvisited = 1\n\t\t\tthis.setState(state => {\n\t\t\t\treturn {\n\t\t\t\t\tvisited\n\t\t\t\t}\n\t\t\t})\n\t\t\tlocalStorage.set(\"visitCount\", visited)\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tconst { name, value } = event.target\n\t\tif ([name].toString() === \"fullName\") {\n\t\t\tconst letters = /^[a-zA-Z\\s]*$/\n\t\t\tif (value.match(letters)) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t[name]: value\n\t\t\t\t});\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\talert(\"Please only enter letter in Name\")\n\t\t\t\treturn\n\t\t\t}\n\t\t} else {\n\t\t\tconst numbers = /^[0-9]*$/\n\t\t\tif (value.match(numbers)) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t[name]: parseInt(value)\n\t\t\t\t});\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\talert(`Please only enter number in ${[name].toString() === \"age\" ? \"age\" : \"saving\"}`)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t}\n\n\tsavingPerson() {\n\t\t// checking for required Data\n\t\tif (this.state.fullName.length !== 0 && this.state.age != null) {\n\t\t\t// create new person\n\t\t\tlet p = new Person(this.state.fullName, this.state.age, this.state.saving)\n\t\t\tp.hasEnoughSaving = null\n\n\t\t\tthis.setState(state => {\n\t\t\t\t// save that person\n\t\t\t\tconst persons = [...state.persons, p] //concat would also work\n\n\t\t\t\t// debug\n\t\t\t\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconsole.table(persons)\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t// reset input values & save mutated array of person\n\t\t\t\t\tfullName: \"\",\n\t\t\t\t\tage: null,\n\t\t\t\t\tsaving: null,\n\t\t\t\t\tpersons\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\talert(\"Please enter the required datas (name & age) for a new person\")\n\t\t}\n\t}\n\n\tsavingPersonsToLocal() {\n\t\tif (this.state.persons.length !== 0) {\n\t\t\tconst { persons } = this.state\n\t\t\tlocalStorage.set(\"persons\", JSON.stringify(persons))\n\t\t}\n\t}\n\n\tclearLocalStorage() {\n\t\tlocalStorage.clear()\n\t}\n\n\tpushPersonsOnServer() {\n\t\t// TODO after research on creating server\n\t}\n\n\tcheckSaving(itemCost) {\n\t\t// default no input case\n\t\tif (itemCost == null) {\n\t\t\titemCost = 0\n\t\t}\n\n\t\t// check saving of each person \n\t\tthis.setState(state => {\n\t\t\tconst persons = [...state.persons]\n\t\t\tif (persons.length !== 0) {\n\t\t\t\tfor (let index = 0; index < persons.length; index++) {\n\t\t\t\t\tpersons[index].hasEnoughSaving = persons[index].hasEnoughSavings(itemCost)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// debug\n\t\t\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t\t\tconsole.table(persons)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tpersons\n\t\t\t}\n\t\t})\n\t}\n\n\tgivePayCheck(index) {\n\t\t// going to the index of the saved person and call givePaycheck() on it\n\t\tthis.setState(state => {\n\t\t\tconst persons = [...state.persons]\n\t\t\tpersons[index].givePaycheck()\n\n\t\t\t// debug\n\t\t\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t\t\tconsole.table(persons)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tpersons\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\tlet root = {\n\t\t\tminWidth: 500,\n\t\t\tmaxWidth: '60%',\n\t\t\toverflowX: 'auto',\n\t\t\tmargin: 20\n\t\t}\n\n\t\tlet table = {\n\t\t\tminWidth: 200\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/** INPUT */}\n\t\t\t\t<form autoComplete=\"off\" style={{ margin: 20 }}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\t\tlabel=\"Full Name\"\n\t\t\t\t\t\tname=\"fullName\"\n\t\t\t\t\t\tvalue={this.state.fullName}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"outlined-age\"\n\t\t\t\t\t\tlabel=\"Age\"\n\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\tvalue={this.state.age === null ? \"\" : this.state.age}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"outlined-saving\"\n\t\t\t\t\t\tlabel=\"Saving (optinal)\"\n\t\t\t\t\t\tname=\"saving\"\n\t\t\t\t\t\tvalue={this.state.saving === null ? \"\" : this.state.saving}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\n\t\t\t\t{/** SAVE */}\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={this.savingPerson}>\n\t\t\t\t\tSave Person\n     \t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={this.savingPersonsToLocal}>\n\t\t\t\t\tSave Local\n     \t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={this.clearLocalStorage}>\n\t\t\t\t\tClear Local\n     \t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled\n\t\t\t\t\tonClick={this.pushPersonsOnServer}>\n\t\t\t\t\tSave On Server\n     \t\t\t</Button>\n\t\t\t\t<br />\n\n\t\t\t\t{/** CHECK */}\n\t\t\t\t<div>\n\t\t\t\t\t<FormControl >\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\t\t\tid=\"item-cost\"\n\t\t\t\t\t\t\tlabel=\"Item Cost\"\n\t\t\t\t\t\t\tname=\"item\"\n\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\tvalue={this.state.item === null ? \"\" : this.state.item}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tstartAdornment={<InputAdornment position=\"start\">€</InputAdornment>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ margin: 20 }}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={() => this.checkSaving(this.state.item)}>\n\t\t\t\t\t\tHas Enough Saving\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\n\t\t\t\t{/** TABLE */}\n\t\t\t\t<Paper style={root}>\n\t\t\t\t\t<Table style={table}>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>Person</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">Name</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">Age</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">Give €€€</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">Has Enough €€€</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{this.state.persons.map((person, index) => (\n\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">{index}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{person.name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{person.age}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.givePayCheck(index)}>\n\t\t\t\t\t\t\t\t\t\t\tGive Money\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{person.hasEnoughSaving !== null ? (person.hasEnoughSaving === true ? \"true\" : \"false\") : \"\"}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Paper>\n\n\t\t\t\t<Box\n\t\t\t\t\tbgcolor=\"grey.700\"\n\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\tp={2}\n\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t\tbottom=\"2%\"\n\t\t\t\t\tright=\"2%\"\n\t\t\t\t\tborderRadius={16}\n\t\t\t\t\tzIndex=\"modal\"\n\t\t\t\t>\n\t\t\t\t\t{this.state.visited}\n\t\t\t\t</Box>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default function App() {\r\n    return(\r\n        <div style={{textAlign: \"center\"}}>\r\n            <text>Hallo from Test Page</text>\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// use are Hook Stuff\r\nimport React, { useState, useEffect } from 'react'\r\n// Router\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\r\n// Button\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Route\r\nimport { Main } from './Main/index'\r\nimport { App as AppPerson } from './Person/index'\r\nimport { App as AppTest } from './Test/index'\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                {/** Link to Sites */}\r\n                <Link to=\"/ReactPlayGround/Person\" style={{ textDecoration: 'none' }}>\r\n                    <Button\r\n                        style={{ margin: 20 }}\r\n                        variant=\"contained\"\r\n                        margin=\"normal\"\r\n                        color=\"primary\">\r\n                        Person Example\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Link to=\"/ReactPlayGround/Test\" style={{ textDecoration: 'none' }}>\r\n                    <Button\r\n                        style={{ margin: 20 }}\r\n                        variant=\"contained\"\r\n                        margin=\"normal\"\r\n                        color=\"primary\">\r\n                        Test Example\r\n                    </Button>\r\n                </Link>\r\n\r\n                {/** Conditional Rendering based on choice of link\r\n                    Switch: give the possiblity of render 404 fallback in case of direct \r\n                        manipulation of url and no match found (use as main page here ;D )\r\n                    path: is how the url match the link above\r\n                    exact: only render top folder\r\n                */}\r\n                <Switch>\r\n                    \r\n                    <Route path=\"/ReactPlayGround/Person\" component={AppPerson} />\r\n                    <Route path=\"/ReactPlayGround/Test\" component={AppTest} />\r\n                    <Route component={Main} />\r\n                </Switch>\r\n\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}